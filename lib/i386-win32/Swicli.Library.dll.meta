Assembly Swicli.Library, Version=1.0.*, Culture=Invariant Language (Invariant Country): 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=SHA1, flags=None
Assembly System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=SHA1, flags=None
Assembly System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=SHA1, flags=None
Assembly System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=SHA1, flags=None
Interface Swicli.Library.IPInvoke: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetInvoke(String, Type[], Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Invoke(String, Type[], Type, Object, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    InvokeDLL(String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Swicli.Library.INativeImport: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
Class Swicli.Library.ImportFunction: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String ModuleName 'get set' : 
    System.Runtime.InteropServices.CharSet CharSet 'get set' : 
    System.Runtime.InteropServices.CallingConvention CallingConvention 'get set' : 
  Methods:
    get_ModuleName(): PrivateScope, Public, HideBySig, SpecialName
    set_ModuleName(String): PrivateScope, Public, HideBySig, SpecialName
    get_CharSet(): PrivateScope, Public, HideBySig, SpecialName
    set_CharSet(CharSet): PrivateScope, Public, HideBySig, SpecialName
    get_CallingConvention(): PrivateScope, Public, HideBySig, SpecialName
    set_CallingConvention(CallingConvention): PrivateScope, Public, HideBySig, SpecialName
Class Swicli.Library.NativeImportBase: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Collections.Generic.List`1[System.String]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Swicli.Library.NativeImport: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Create(String): PrivateScope, Public, Static, HideBySig
Class Swicli.Library.PrologCLR: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.Generic.List`1[System.String] AssemblySearchPaths : Public, Static
    System.Collections.Generic.List`1[System.Reflection.Assembly] AssembliesLoaded : Public, Static
    System.Collections.Generic.List`1[System.String] AssembliesLoading : Public, Static
    System.Collections.Generic.List`1[System.Type] TypesLoaded : Public, Static
    System.Collections.Generic.List`1[System.Type] TypesLoading : Public, Static
    System.Collections.Generic.List`1[System.Reflection.MethodInfo] ExportedMethodInfos : Public, Static
    Boolean ForceJanCase : Public, Static
    System.Collections.Generic.Dictionary`2[System.String,System.Reflection.MethodInfo] AutoDocInfos : Public, Static
    Boolean PreserveObjectType : Public, Static
    Boolean DebugRefs : Public, Static
    Boolean StrictRefs : Public, Static
    System.Collections.Generic.Dictionary`2[System.Object,Swicli.Library.TrackedObject] ObjToTag : Public, Static, InitOnly
    System.Collections.Generic.Dictionary`2[System.String,Swicli.Library.TrackedObject] TagToObj : Public, Static, InitOnly
    System.Collections.Hashtable TagToST : Public, Static, InitOnly
    System.Collections.Generic.HashSet`1[System.String] NeedSweep : Public, Static, InitOnly
    System.Runtime.InteropServices.GCHandle NULL_GCHANDLE : Public, Static, InitOnly
    Int64 nextTrackingNum : Public, Static
    Boolean MakeArrayImmediate : Public, Static
    Boolean MakeNoRefs : Public, Static
    Boolean MadeARef : Public, Static
    Boolean AlwaysUsePerThreadObjectTracker : Public, Static
    Int32 ThisThreadTracked : Public, Static
    System.Collections.Generic.List`1[System.Object] PinnedObjects : Public, Static, InitOnly
    Boolean SweepAtomGC : Public, Static
    Boolean VerboseStartup : Public, Static
    Boolean JplDisabled : Public, Static
    Boolean PlCsDisabled : Public, Static
    System.String AltSwiHomeDir : Public, Static
    Boolean JplSafeNativeMethodsDisabled : Public, Static
    Boolean JplSafeNativeMethodsCalled : Public, Static
    Boolean IsHalted : Public, Static
    Boolean FailOnMissingInsteadOfError : Public, Static
    System.Threading.Thread CreatorThread : Public, Static
    Boolean IsPLWin : Public, Static
    Boolean RedirectStreams : Public, Static
    Int32 VMStringsAsAtoms : Public, Static
    Boolean IsLinux : Public, Static
    System.Collections.Generic.Dictionary`2[System.Reflection.Assembly,System.Xml.XmlNode] AssmblyXDoics : Public, Static
    System.Collections.Generic.Dictionary`2[System.String,System.Collections.Generic.List`1[System.Func`2[System.Object,System.Object]]] convertCache : Public, Static, InitOnly
    System.Type[] ZERO_TYPES : Public, Static, InitOnly
    System.Object[] ZERO_OBJECTS : Public, Static, InitOnly
    System.Type[] ONE_STRING : Public, Static, InitOnly
    System.Reflection.BindingFlags BindingFlagsJustStatic : Public, Static
    System.Reflection.BindingFlags BindingFlagsInstance : Public, Static
    System.Reflection.BindingFlags BindingFlagsALL : Public, Static
    System.Reflection.BindingFlags InstanceFields : Public, Static
    System.Reflection.BindingFlags BindingFlagsALLNC : Public, Static
    System.Reflection.BindingFlags BindingFlagsALL3 : Public, Static
    System.Reflection.BindingFlags ICASE : Public, Static
    System.String[] setItemMethodNames : Public, Static
    System.String[] countItemMethodNames : Public, Static
    System.String[] addItemMethodNames : Public, Static
    System.Object ToFromConvertLock : Public, Static
    System.Collections.Generic.Dictionary`2[Swicli.Library.EventHandlerInPrologKey,Swicli.Library.EventHandlerInProlog] PrologEventHandlers : Public, Static
    Boolean ClientReady : Public, Static
    Boolean SaneThreadWorld : Public, Static
    System.Collections.Generic.Dictionary`2[System.Threading.Thread,System.Int32] ThreadRegisterations : Public, Static
    System.Collections.Generic.Dictionary`2[System.Threading.Thread,System.Int32] ForiegnFrameCounts : Public, Static
    System.Collections.Generic.Dictionary`2[System.Int32,System.IntPtr] SafeThreads : Public, Static
    System.Collections.Generic.Dictionary`2[System.Int32,System.Threading.Thread] engineToThread : Public, Static
    System.Collections.Generic.Dictionary`2[System.Int32,System.Int32] threadToEngine : Public, Static
    System.Collections.Generic.Dictionary`2[System.Int32,SbsSW.SwiPlCs.PlMtEngine] ThreadEngines : Public, Static
    System.Collections.Generic.List`1[System.IntPtr] FreeEngines : Public, Static
    Boolean UseEnginePool : Public, Static
    Boolean NoTestThreadFActory : Public, Static
    Boolean OneToOneEnginesPeThread : Public, Static
    System.Collections.Generic.Dictionary`2[Swicli.Library.DelegateObjectInPrologKey,Swicli.Library.DelegateObjectInProlog] PrologDelegateHandlers : Public, Static
  Properties:
    Boolean UsePerThreadObjectTracker 'get ' : 
    System.String IKVMHome 'get set' : 
    System.String SwiHomeDir 'get set' : 
    Swicli.Library.PrologCLR SingleInstance 'get ' : 
    SbsSW.SwiPlCs.PlTerm ATOM_NIL 'get ' : 
    SbsSW.SwiPlCs.PlTerm PLNULL 'get ' : 
    SbsSW.SwiPlCs.PlTerm PLVOID 'get ' : 
    SbsSW.SwiPlCs.PlTerm PLTRUE 'get ' : 
    SbsSW.SwiPlCs.PlTerm PLFALSE 'get ' : 
    System.Object ThreadRegLock 'get ' : 
  Methods:
    cliAddRecomposer(PlTerm, PlTerm, PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    AddPrologTermRecomposer(Type, String, String, String, String, Int32): PrivateScope, Public, Static, HideBySig
    GetTypeMap(Type, IDictionary`2): PrivateScope, Public, Static, HideBySig
    ToFieldLayout(String, String, Object, Type, PlTerm, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    SetMemberValue(MemberInfo, Object, Object): PrivateScope, Public, Static, HideBySig
    cliNewEventWaiter(PlTerm, PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliAddEventWaiter(PlTerm, PlTerm, PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliBlockUntilEvent(PlTerm, PlTerm, PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliFindConstructor(PlTerm, PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliNew(PlTerm, PlTerm, PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliFindMethod(PlTerm, PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliCallRaw(PlTerm, PlTerm, PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliRaiseEventHandler(PlTerm, PlTerm, PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    RaiseEvent(Object, PlTerm, PlTerm[], PlTerm, EventInfo, Type): PrivateScope, Public, Static, HideBySig
    GetParameterType(ParameterInfo): PrivateScope, Public, Static, HideBySig
    IsByRef(ParameterInfo): PrivateScope, Public, Static, HideBySig
    get_ThreadRegLock(): PrivateScope, Public, Static, HideBySig, SpecialName
    RegisterMainThread(): PrivateScope, Public, Static, HideBySig
    PingThreadFactories(): PrivateScope, Public, Static, HideBySig
    RegisterCurrentThread(): PrivateScope, Public, Static, HideBySig
    RegisterThread(Thread): PrivateScope, Public, Static, HideBySig
    RegisterThread121(Thread): PrivateScope, Public, Static, HideBySig
    RegisterThread121A(Thread): PrivateScope, Public, Static, HideBySig
    RegisterThread121T(Thread): PrivateScope, Public, Static, HideBySig
    RegisterThread121Leak(Thread): PrivateScope, Public, Static, HideBySig
    RegisterThread12Many(Thread): PrivateScope, Public, Static, HideBySig
    RegisterThreadOrig(Thread): PrivateScope, Public, Static, HideBySig
    CheckEngine(): PrivateScope, Public, Static, HideBySig
    DeregisterThread(Thread): PrivateScope, Public, Static, HideBySig
    ExitThread(Thread): PrivateScope, Public, Static, HideBySig
    KillPrologThreads(): PrivateScope, Public, Static, HideBySig
    cliNewDelegate(PlTerm, PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliNewDelegateTerm(Type, PlTerm, Boolean): PrivateScope, Public, Static, HideBySig
    ToObjectArray(PlTerm[]): PrivateScope, Public, Static, HideBySig
    ToTermArray(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    get_SingleInstance(): PrivateScope, Public, Static, HideBySig, SpecialName
    Warn(String, Object[]): PrivateScope, Public, Static, HideBySig
    Error(String, Object[]): PrivateScope, Public, Static, HideBySig
    Debug(String, Object[]): PrivateScope, Public, Static, HideBySig
    cliThrow(PlTerm): PrivateScope, Public, Static, HideBySig
    cliBreak(PlTerm): PrivateScope, Public, Static, HideBySig
    PlSucceedOrFail(Boolean): PrivateScope, Public, Static, HideBySig
    PlSucceedOrFailOrError(Int32): PrivateScope, Public, Static, HideBySig
    cliToStrRaw(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliJavaToString(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliLockEnter(PlTerm): PrivateScope, Public, Static, HideBySig
    cliLockExit(PlTerm): PrivateScope, Public, Static, HideBySig
    cliAddElement(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    colAddElement(IEnumerable`1, Object, MethodInfo[]): PrivateScope, Public, Static, HideBySig
    colAddElementFallback(IEnumerable, Object, MethodInfo[]): PrivateScope, Public, Static, HideBySig
    cliSetElement(PlTerm, PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    colSetElement(IEnumerable`1, Object, T, MethodInfo[]): PrivateScope, Public, Static, HideBySig
    colSetElementFallback(IEnumerable, Object, Object, MethodInfo[]): PrivateScope, Public, Static, HideBySig
    get_ATOM_NIL(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PLNULL(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PLVOID(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PLTRUE(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PLFALSE(): PrivateScope, Public, Static, HideBySig, SpecialName
    cliMakeDefault(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    GetInstance(PlTerm): PrivateScope, Public, Static, HideBySig
    UnifyAtom(UInt32, String): PrivateScope, Public, Static, HideBySig
    UnifyToProlog(Object, PlTerm): PrivateScope, Public, Static, HideBySig
    UnifyToPrologImmediate(Object, PlTerm): PrivateScope, Public, Static, HideBySig
    C(String): PrivateScope, Public, Static, HideBySig
    CreatePrologBackedDictionary(PlTerm): PrivateScope, Public, Static, HideBySig
    CreatePrologBackedCollection(PlTerm): PrivateScope, Public, Static, HideBySig
    cliTestPbd(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliTestPbdt(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliTestPbct(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliTestPbc(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliAddEventHandler(PlTerm, PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliRemoveEventHandler(PlTerm, PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliGetDll(String): PrivateScope, Public, Static, HideBySig
    cliDynTest_1(): PrivateScope, Public, Static, HideBySig
    cliDynTest_2(): PrivateScope, Public, Static, HideBySig
    cliDynTest_3(): PrivateScope, Public, Static, HideBySig
    cliGetterm(PlTerm, PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliIsLayout(PlTerm): PrivateScope, Public, Static, HideBySig
    cliAddLayout(PlTerm, PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliAddLayout(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    AddPrologTermLayout(Type, String, MemberInfo[], MemberInfo): PrivateScope, Public, Static, HideBySig
    InitFromUser(): PrivateScope, Public, HideBySig
    cliTypeToTypespec(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    GetTypeThrowIfMissing(PlTerm): PrivateScope, Public, Static, HideBySig
    GetType(PlTerm): PrivateScope, Public, Static, HideBySig
    GetType(PlTerm, Boolean): PrivateScope, Public, Static, HideBySig
    cliFindType(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    ConsoleTrace(Object): PrivateScope, Public, Static, HideBySig
    cliFindClass(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliGetType(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliGetClass(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliClassFromType(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliTypeFromClass(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliAddShorttype(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliGetClassname(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliTypeToFullname(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    ResolveType1(String): PrivateScope, Public, Static, HideBySig
    ResolveType2(String): PrivateScope, Public, Static, HideBySig
    getPrimitiveType(String): PrivateScope, Public, Static, HideBySig
    cliPropsForType(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliMembers(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    PlC(String, PlTerm[]): PrivateScope, Public, Static, HideBySig
    PlC(String, PlTermV): PrivateScope, Public, Static, HideBySig
    GetXmlDocMembers(Assembly): PrivateScope, Public, Static, HideBySig
    GetXmlDocMembers0(Assembly): PrivateScope, Public, Static, HideBySig
    GetXmlDocMembers(Type): PrivateScope, Public, Static, HideBySig
    cliMemberDoc(PlTerm, PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    GetDocString(MemberInfo): PrivateScope, Public, Static, HideBySig
    GetDocString(XmlNode, MemberInfo): PrivateScope, Public, Static, HideBySig
    cliCast(PlTerm, PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliCastImmediate(PlTerm, PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    CastTerm(PlTerm, Type): PrivateScope, Public, Static, HideBySig
    ReflectiveCast(Object): PrivateScope, Public, Static, HideBySig
    ReflectiveNull(): PrivateScope, Public, Static, HideBySig
    CastTerm0(PlTerm, Type): PrivateScope, Public, Static, HideBySig
    CastTerm1(PlTerm, Type): PrivateScope, Public, Static, HideBySig
    cliGetField(PlTerm, PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliSetField(PlTerm, PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliGetProperty(PlTerm, PlTerm, PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliSetProperty(PlTerm, PlTerm, PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliGetRaw(PlTerm, PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliGet0(Object, PlTerm, Type, Boolean&(Out), BindingFlags): PrivateScope, Public, Static, HideBySig
    cliSetRaw(PlTerm, PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliSet0(Object, PlTerm, PlTerm, Type, BindingFlags): PrivateScope, Public, Static, HideBySig
    cliNewArray(PlTerm, PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliArrayFill(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliArrayFillValues(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliArrayToTerm(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    unifyArrayToTerm(Array, PlTerm): PrivateScope, Public, Static, HideBySig
    cliTestArrayToTerm1(PlTerm): PrivateScope, Public, Static, HideBySig
    cliTestArrayToTerm2(PlTerm): PrivateScope, Public, Static, HideBySig
    cliArrayToTermlist(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliTermToArray(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    IsDefined(String, String, Int32): PrivateScope, Public, Static, HideBySig
    CallProlog(Object, String, String, Int32, Object, Object[], Type, Boolean): PrivateScope, Public, Static, HideBySig
    PlNamed(String): PrivateScope, Public, Static, HideBySig
    Eval(Object): PrivateScope, Public, HideBySig
    Intern(String, Object): PrivateScope, Public, HideBySig
    IsDefined(String): PrivateScope, Public, HideBySig
    GetSymbol(String): PrivateScope, Public, HideBySig
    Read(String, TextWriter): PrivateScope, Public, HideBySig
    PlCall(String): PrivateScope, Public, Static, HideBySig
    PlCall(String, String, PlTermV): PrivateScope, Public, Static, HideBySig
    DoQuery(String): PrivateScope, Public, Static, HideBySig
    ConsoleWriteLine(String): PrivateScope, Public, Static, HideBySig
    WriteException(Exception): PrivateScope, Public, Static, HideBySig
    StreamRead(): PrivateScope, Public, HideBySig
    ToCSString(PlTermV): PrivateScope, Public, Static, HideBySig
    PlAssert(String): PrivateScope, Public, Static, HideBySig
    Consult(String): PrivateScope, Public, HideBySig
    ConsultIfExists(String): PrivateScope, Public, HideBySig
    tag_to_object(String): PrivateScope, Public, Static, HideBySig
    cliAddTag(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliRemoveTag(PlTerm): PrivateScope, Public, Static, HideBySig
    tag_to_object(String, Boolean): PrivateScope, Public, Static, HideBySig
    object_to_tag(Object): PrivateScope, Public, Static, HideBySig
    cliToRef(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    cliToImmediate(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    UnifyTagged(Object, PlTerm): PrivateScope, Public, Static, HideBySig
    cliTrackerBegin(PlTerm): PrivateScope, Public, Static, HideBySig
    cliTrackerFree(PlTerm): PrivateScope, Public, Static, HideBySig
    cliFree(PlTerm): PrivateScope, Public, Static, HideBySig
    get_UsePerThreadObjectTracker(): PrivateScope, Public, Static, HideBySig, SpecialName
    InstallAtomGCHook(): PrivateScope, Public, Static, HideBySig
    ForceInstallAtomGCHook(): PrivateScope, Public, Static, HideBySig
    cliHeap(PlTerm): PrivateScope, Public, Static, HideBySig
    CantPin(Object): PrivateScope, Public, Static, HideBySig
    PinObject(Object): PrivateScope, Public, Static, HideBySig
    UnPinObject(Object): PrivateScope, Public, Static, HideBySig
    RemoveTaggedObject(String): PrivateScope, Public, Static, HideBySig
    load_swiplcs(): PrivateScope, Public, Static, HideBySig
    SetupProlog(): PrivateScope, Public, Static, HideBySig
    SetupProlog0(): PrivateScope, Public, Static, HideBySig
    SetupProlog1(): PrivateScope, Public, Static, HideBySig
    SetupProlog2(): PrivateScope, Public, Static, HideBySig
    Main(String[]): PrivateScope, Public, Static, HideBySig
    Main_Was(String[]): PrivateScope, Public, Static, HideBySig
    RegisterPLCSForeigns(): PrivateScope, Public, Static, HideBySig
    get_IKVMHome(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_IKVMHome(String): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SwiHomeDir(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_SwiHomeDir(String): PrivateScope, Public, Static, HideBySig, SpecialName
    cliAddEventHandler0(PlTerm, PlTerm, PlTerm, PlTerm, IntPtr): PrivateScope, Public, Static, HideBySig
    ManagedHalt(): PrivateScope, Public, Static, HideBySig
    FindAssemblyByPath(String, String): PrivateScope, Public, Static, HideBySig
    AssemblyLoad(String): PrivateScope, Public, Static, HideBySig
    ResolveAssembly(Assembly): PrivateScope, Public, Static, HideBySig
    cliLoadAssemblyMethods(Assembly, Boolean, String): PrivateScope, Public, Static, HideBySig
    cliLoadAssembly(PlTerm): PrivateScope, Public, Static, HideBySig
    cliAddAssemblySearchPath(PlTerm): PrivateScope, Public, Static, HideBySig
    cliRemoveAssemblySearchPath(PlTerm): PrivateScope, Public, Static, HideBySig
    cliLoadAssemblyUncaught(PlTerm): PrivateScope, Public, Static, HideBySig
    CopyOf(List`1): PrivateScope, Public, Static, HideBySig
    CopyOf(ICollection): PrivateScope, Public, Static, HideBySig
    CopyOf(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    CopyOf(IDictionary`2): PrivateScope, Public, Static, HideBySig
    CreateEnumClassTest(): PrivateScope, Public, Static, HideBySig
    cliCompileEnum(Type, String, List`1, PlTerm): PrivateScope, Public, Static, HideBySig
    CreateTypeClassTest(): PrivateScope, Public, Static, HideBySig
    cliCompileType(String, Type, PlTerm): PrivateScope, Public, Static, HideBySig
    cliCompileType(List`1, List`1, String, List`1, PlTerm): PrivateScope, Public, Static, HideBySig
    cliCompileMember(PlTerm): PrivateScope, Public, Static, HideBySig
    cliCompileMember(PlTerm, TypeBuilder): PrivateScope, Public, Static, HideBySig
    cliCustomAttributeBuilder(PlTerm): PrivateScope, Public, Static, HideBySig
    cliAsAttibute(PlTerm): PrivateScope, Public, Static, HideBySig
    InternMethod(MethodInfo, PrologVisible): PrivateScope, Public, Static, HideBySig
    InternMethod(String, String, AnyMethod): PrivateScope, Public, Static, HideBySig
    InternMethod(String, String, MethodInfo): PrivateScope, Public, Static, HideBySig
    InternMethod(String, String, MethodInfo, Object): PrivateScope, Public, Static, HideBySig
    RegisterInfo(String, Int32, MethodInfo): PrivateScope, Public, Static, HideBySig
    ToPrologCase(String): PrivateScope, Public, Static, HideBySig
    ExceptionString(Exception): PrivateScope, Public, Static, HideBySig
    GetObjectTypes(Object[], Type[]): PrivateScope, Public, Static, HideBySig
    InvokeFromC(Func`1, Boolean): PrivateScope, Public, Static, HideBySig
    InvokeFromC0(Func`1, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    Dispose(): PrivateScope, Public, HideBySig
    ToProlog(Object): PrivateScope, Public, Static, HideBySig
Class Swicli.Library.PrologCLR+PinnedObject`1[T]: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  Type parameter: T, System.ValueType,  NotNullableValueType DefaultConstructor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    T managedObject : Public
  Properties:
    T ManangedObject 'get set' : 
    IntPtr Pointer 'get ' : 
  Methods:
    get_ManangedObject(): PrivateScope, Public, HideBySig, SpecialName
    set_ManangedObject(T): PrivateScope, Public, HideBySig, SpecialName
    get_Pointer(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Recopy(): PrivateScope, Public, HideBySig
Class Swicli.Library.PrologGenericDelegate: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Int32 PrologArity : Public
    System.Delegate Delegate : Public
    System.Type ReturnType : Public
    Boolean IsSyncronous : Public
    System.Object SyncLock : Public
    Swicli.Library.BlockingQueue`1[System.Action] PrologEventQueue : Public, Static
    System.Threading.Thread PrologGenericDelegateThread : Public, Static
    Boolean IsUsingGlobalQueue : Public, Static
  Properties:
    System.Reflection.MethodInfo HandlerMethod 'get ' : 
  Methods:
    EnsureStated(): PrivateScope, Public, Static, HideBySig
    get_HandlerMethod(): PrivateScope, Public, HideBySig, SpecialName
    SetInstanceOfDelegateType(Type): PrivateScope, Public, HideBySig
    GenericFunR0(): PrivateScope, Public, HideBySig
    GenericFunR1(A): PrivateScope, Public, HideBySig
    GenericFunR2(A, B): PrivateScope, Public, HideBySig
    GenericFunR3(A, B, C): PrivateScope, Public, HideBySig
    GenericFunR4(A, B, C, D): PrivateScope, Public, HideBySig
    GenericFunR5(A, B, C, D, E): PrivateScope, Public, HideBySig
    GenericFunR6(A, B, C, D, E, F): PrivateScope, Public, HideBySig
    GenericFunR7(A, B, C, D, E, F, G): PrivateScope, Public, HideBySig
    GenericFunR8(A, B, C, D, E, F, G, H): PrivateScope, Public, HideBySig
    GenericFun0(): PrivateScope, Public, HideBySig
    GenericFun1(A): PrivateScope, Public, HideBySig
    GenericFun2(A, B): PrivateScope, Public, HideBySig
    GenericFun3(A, B, C): PrivateScope, Public, HideBySig
    GenericFun4(A, B, C, D): PrivateScope, Public, HideBySig
    GenericFun5(A, B, C, D, E): PrivateScope, Public, HideBySig
    GenericFun6(A, B, C, D, E, F): PrivateScope, Public, HideBySig
    GenericFun7(A, B, C, D, E, F, G): PrivateScope, Public, HideBySig
    GenericFun8(A, B, C, D, E, F, G, H): PrivateScope, Public, HideBySig
    CallPrologV(Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CallProlog(Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CallPrologFast(Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Swicli.Library.SCCH: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Setup(PlTermV): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Call(PlTermV): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Close(PlTermV): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    HasMore(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Swicli.Library.ClosureDelegate: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Swicli.Library.PrologGenericDelegate
    Void .ctor(System.Reflection.EventInfo, System.Object, SbsSW.SwiPlCs.PlTerm): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
    Swicli.Library.SCCH
  Methods:
    CallProlog(Object[]): PrivateScope, Public, Virtual, HideBySig
    CallPrologV(Object[]): PrivateScope, Public, Virtual, HideBySig
    CallPrologFast(Object[]): PrivateScope, Public, Virtual, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Setup(PlTermV): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Call(PlTermV): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Close(PlTermV): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    HasMore(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Swicli.Library.BlockingQueue`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
  :System.Collections.Generic.Queue`1[T]
    Void .ctor(System.Collections.Generic.IEnumerable`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Closed 'get ' : 
  Methods:
    Clear(): PrivateScope, Public, HideBySig
    Close(): PrivateScope, Public, HideBySig
    Dequeue(): PrivateScope, Public, HideBySig
    Dequeue(TimeSpan): PrivateScope, Public, HideBySig
    Dequeue(Int32): PrivateScope, Public, HideBySig
    Dequeue(Int32, T&): PrivateScope, Public, HideBySig
    Enqueue(String, T): PrivateScope, Public, HideBySig
    Open(): PrivateScope, Public, HideBySig
    get_Closed(): PrivateScope, Public, HideBySig, SpecialName
Interface Swicli.Library.PrologKey: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.String Name 'get ' : 
    System.String Module 'get ' : 
    Int32 Arity 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Module(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Arity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class SbsSW.SwiPlCs.Exceptions.PlLibException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
Class SbsSW.SwiPlCs.Exceptions.PlException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(SbsSW.SwiPlCs.PlTerm): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String MessagePl 'get ' : 
    SbsSW.SwiPlCs.PlTerm Term 'get ' : 
    System.String Message 'get ' : 
  Methods:
    get_MessagePl(): PrivateScope, Public, HideBySig, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    get_Term(): PrivateScope, Public, HideBySig, SpecialName
    get_Message(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    PlThrow(): PrivateScope, Public, HideBySig
    Throw(): PrivateScope, Public, HideBySig
Class SbsSW.SwiPlCs.Exceptions.PlTypeException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :SbsSW.SwiPlCs.Exceptions.PlException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(SbsSW.SwiPlCs.PlTerm): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, SbsSW.SwiPlCs.PlTerm): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Swicli.Library.Embedded: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    install(): PrivateScope, Public, Static, HideBySig
Struct SbsSW.SwiPlCs.Callback.PlForeignSwitches: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    SbsSW.SwiPlCs.Callback.PlForeignSwitches None = 0 : Public, Static, Literal, HasDefault
    SbsSW.SwiPlCs.Callback.PlForeignSwitches NoTrace = 1 : Public, Static, Literal, HasDefault
    SbsSW.SwiPlCs.Callback.PlForeignSwitches Transparent = 2 : Public, Static, Literal, HasDefault
    SbsSW.SwiPlCs.Callback.PlForeignSwitches Nondeterministic = 4 : Public, Static, Literal, HasDefault
    SbsSW.SwiPlCs.Callback.PlForeignSwitches VarArgs = 8 : Public, Static, Literal, HasDefault
    SbsSW.SwiPlCs.Callback.PlForeignSwitches CRef = 16 : Public, Static, Literal, HasDefault
    SbsSW.SwiPlCs.Callback.PlForeignSwitches ISO = 32 : Public, Static, Literal, HasDefault
Class SbsSW.SwiPlCs.Callback.PL_agc_hook_t: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(UInt32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class SbsSW.SwiPlCs.Callback.SwiOnHalt: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Int32, Void*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Int32, Void*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class SbsSW.SwiPlCs.Callback.PL_abort_hook_t: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class SbsSW.SwiPlCs.Callback.DelegateParameter0: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class SbsSW.SwiPlCs.Callback.DelegateParameter1: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(PlTerm): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(PlTerm, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class SbsSW.SwiPlCs.Callback.DelegateParameter2: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(PlTerm, PlTerm): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(PlTerm, PlTerm, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class SbsSW.SwiPlCs.Callback.DelegateParameter3: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(PlTerm, PlTerm, PlTerm): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(PlTerm, PlTerm, PlTerm, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class SbsSW.SwiPlCs.Callback.DelegateParameter4: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(PlTerm, PlTerm, PlTerm, PlTerm): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(PlTerm, PlTerm, PlTerm, PlTerm, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class SbsSW.SwiPlCs.Callback.DelegateParameter5: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(PlTerm, PlTerm, PlTerm, PlTerm, PlTerm): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(PlTerm, PlTerm, PlTerm, PlTerm, PlTerm, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class SbsSW.SwiPlCs.Callback.DelegateParameterVarArgs: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(PlTermV): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(PlTermV, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class SbsSW.SwiPlCs.Callback.DelegateParameterBacktrack1: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(PlTerm, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(PlTerm, IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class SbsSW.SwiPlCs.Callback.DelegateParameterBacktrack2: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(PlTerm, PlTerm, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(PlTerm, PlTerm, IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class SbsSW.SwiPlCs.Callback.DelegateParameterBacktrackVarArgs: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(PlTerm, Int32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(PlTerm, Int32, IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct SbsSW.SwiPlCs.Streams.PlStreamType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    SbsSW.SwiPlCs.Streams.PlStreamType Input = 0 : Public, Static, Literal, HasDefault
    SbsSW.SwiPlCs.Streams.PlStreamType Output = 1 : Public, Static, Literal, HasDefault
    SbsSW.SwiPlCs.Streams.PlStreamType Error = 2 : Public, Static, Literal, HasDefault
Class SbsSW.SwiPlCs.Streams.DelegateStreamReadFunction: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, IntPtr, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, IntPtr, Int64, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class SbsSW.SwiPlCs.Streams.DelegateStreamWriteFunction: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, String, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, String, Int64, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct SbsSW.SwiPlCs.PlType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    SbsSW.SwiPlCs.PlType PlUnknown = 0 : Public, Static, Literal, HasDefault
    SbsSW.SwiPlCs.PlType PlVariable = 1 : Public, Static, Literal, HasDefault
    SbsSW.SwiPlCs.PlType PlAtom = 2 : Public, Static, Literal, HasDefault
    SbsSW.SwiPlCs.PlType PlInteger = 3 : Public, Static, Literal, HasDefault
    SbsSW.SwiPlCs.PlType PlFloat = 4 : Public, Static, Literal, HasDefault
    SbsSW.SwiPlCs.PlType PlString = 5 : Public, Static, Literal, HasDefault
    SbsSW.SwiPlCs.PlType PlTerm = 6 : Public, Static, Literal, HasDefault
    SbsSW.SwiPlCs.PlType PlNil = 7 : Public, Static, Literal, HasDefault
    SbsSW.SwiPlCs.PlType PlBlob = 8 : Public, Static, Literal, HasDefault
    SbsSW.SwiPlCs.PlType PlListPair = 9 : Public, Static, Literal, HasDefault
Class SbsSW.SwiPlCs.PlArrayEnumerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(SbsSW.SwiPlCs.PlTerm, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[SbsSW.SwiPlCs.PlTerm]
    System.IDisposable
    System.Collections.IEnumerator
Class SbsSW.SwiPlCs.PlTermVEnumerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(SbsSW.SwiPlCs.PlTermV, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[SbsSW.SwiPlCs.PlTerm]
    System.IDisposable
    System.Collections.IEnumerator
Interface SbsSW.SwiPlCs.IndexableWithLength`1[T]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: T
  Properties:
    T Item [Int32] 'get ' : 
    Int32 Length 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Struct SbsSW.SwiPlCs.PlTerm: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable
    System.Collections.Generic.IEnumerable`1[SbsSW.SwiPlCs.PlTerm]
    System.Collections.IEnumerable
    SbsSW.SwiPlCs.IndexableWithLength`1[SbsSW.SwiPlCs.PlTerm]
  Fields:
    System.String LIST_FUNCTOR_NAME : Public, Static
  Properties:
    SbsSW.SwiPlCs.PlTerm Item [Int32] 'get ' : 
    SbsSW.SwiPlCs.PlType PlType 'get ' : 
    Boolean IsVar 'get ' : 
    Boolean IsGround 'get ' : 
    Boolean IsAtom 'get ' : 
    Boolean IsString 'get ' : 
    Boolean IsInteger 'get ' : 
    Boolean IsFloat 'get ' : 
    Boolean IsCompound 'get ' : 
    Boolean IsList 'get ' : 
    Boolean IsNewList 'get ' : 
    Boolean IsAtomic 'get ' : 
    Boolean IsNumber 'get ' : 
    Boolean IsNil 'get ' : 
    Int32 Arity 'get ' : 
    System.String Name 'get ' : 
  Methods:
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThanOrEqual(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThanOrEqual(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(PlTerm, Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Int32, PlTerm): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(PlTerm, String): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(String, PlTerm): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(PlTerm, Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Int32, PlTerm): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(PlTerm, String): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(String, PlTerm): PrivateScope, Public, Static, HideBySig, SpecialName
    FromObject(Object): PrivateScope, Public, HideBySig
    ArgItem(Int32): PrivateScope, Public, HideBySig
    Shift(Int32): PrivateScope, Public, HideBySig
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    PlVar(): PrivateScope, Public, Static, HideBySig
    PlTail(PlTerm): PrivateScope, Public, Static, HideBySig
    PlCompound(String, PlTermV): PrivateScope, Public, Static, HideBySig
    PlList(PlTermV): PrivateScope, Public, Static, HideBySig
    PlList(PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    PlCompound(String, PlTerm[]): PrivateScope, Public, Static, HideBySig
    PlNewAtom(String): PrivateScope, Public, Static, HideBySig
    PlAtom(String): PrivateScope, Public, Static, HideBySig
    PlCompound(String, PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    PlCompound(String, PlTerm, PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    PlCompound(String, PlTerm, PlTerm, PlTerm, PlTerm): PrivateScope, Public, Static, HideBySig
    PlString(String): PrivateScope, Public, Static, HideBySig
    PlString(String, Int32): PrivateScope, Public, Static, HideBySig
    PlCodeList(String): PrivateScope, Public, Static, HideBySig
    PlCharList(String): PrivateScope, Public, Static, HideBySig
    get_PlType(): PrivateScope, Public, HideBySig, SpecialName
    get_IsVar(): PrivateScope, Public, HideBySig, SpecialName
    get_IsGround(): PrivateScope, Public, HideBySig, SpecialName
    get_IsAtom(): PrivateScope, Public, HideBySig, SpecialName
    get_IsString(): PrivateScope, Public, HideBySig, SpecialName
    get_IsInteger(): PrivateScope, Public, HideBySig, SpecialName
    get_IsFloat(): PrivateScope, Public, HideBySig, SpecialName
    get_IsCompound(): PrivateScope, Public, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNewList(): PrivateScope, Public, HideBySig, SpecialName
    get_IsAtomic(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNil(): PrivateScope, Public, HideBySig, SpecialName
    Append(PlTerm): PrivateScope, Public, HideBySig
    Add(PlTerm): PrivateScope, Public, HideBySig
    AddList(PlTerm): PrivateScope, Public, HideBySig
    Close(): PrivateScope, Public, HideBySig
    NextValue(): PrivateScope, Public, HideBySig
    ToList(): PrivateScope, Public, HideBySig
    ToListString(): PrivateScope, Public, HideBySig
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToStringCanonical(): PrivateScope, Public, HideBySig
    Put(PlTerm): PrivateScope, Public, HideBySig
    Put(String): PrivateScope, Public, HideBySig
    Put(Int64): PrivateScope, Public, HideBySig
    Put(UInt64): PrivateScope, Public, HideBySig
    Put(Double): PrivateScope, Public, HideBySig
    Unify(PlTerm): PrivateScope, Public, HideBySig
    CanUnify(PlTerm): PrivateScope, Public, HideBySig
    Unify(String): PrivateScope, Public, HideBySig
    UnifyAtom(String): PrivateScope, Public, HideBySig
    Unify(Int64): PrivateScope, Public, HideBySig
    Unify(UInt64): PrivateScope, Public, HideBySig
    Unify(Double): PrivateScope, Public, HideBySig
    get_Arity(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    longValue(): PrivateScope, Public, HideBySig
    intValue(): PrivateScope, Public, HideBySig
    doubleValue(): PrivateScope, Public, HideBySig
    op_Explicit(PlTerm): PrivateScope, Public, Static, HideBySig, SpecialName
    CastToString(UInt32): PrivateScope, Public, Static, HideBySig
    CastToString0(UInt32): PrivateScope, Public, Static, HideBySig
    op_Explicit(PlTerm): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(PlTerm): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(PlTerm): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(PlTerm): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(PlTerm): PrivateScope, Public, Static, HideBySig, SpecialName
Struct SbsSW.SwiPlCs.PlTermV: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(SbsSW.SwiPlCs.PlTerm[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(SbsSW.SwiPlCs.PlTerm, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[SbsSW.SwiPlCs.PlTermV]
    System.Collections.Generic.IEnumerable`1[SbsSW.SwiPlCs.PlTerm]
    System.Collections.IEnumerable
    SbsSW.SwiPlCs.IndexableWithLength`1[SbsSW.SwiPlCs.PlTerm]
  Properties:
    Int32 Size 'get ' : 
    SbsSW.SwiPlCs.PlTerm Item [Int32] 'get set' : 
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Resize(Int32): PrivateScope, Public, HideBySig
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, PlTerm): PrivateScope, Public, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(PlTermV): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Equality(PlTermV, PlTermV): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(PlTermV, PlTermV): PrivateScope, Public, Static, HideBySig, SpecialName
Class SbsSW.SwiPlCs.PlFrame: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    UInt32 FID 'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_FID(): PrivateScope, Public, HideBySig, SpecialName
    Rewind(): PrivateScope, Public, HideBySig
Class SbsSW.SwiPlCs.PlEngine: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.Collections.Generic.Dictionary`2[System.String,System.Delegate] SavedRegisterForeign : Public, Static, InitOnly
    Boolean IsStreamFunctionWriteModified : Public, Static
    Boolean IsStreamFunctionReadModified : Public, Static
  Properties:
    Boolean IsInitialized 'get ' : 
  Methods:
    SaveRegisterForeign(String, String, Int32, Delegate): PrivateScope, Public, Static, HideBySig
    RegisterForeign(Delegate): PrivateScope, Public, Static, HideBySig
    RegisterForeign(String, Delegate): PrivateScope, Public, Static, HideBySig
    RegisterForeign(String, Int32, Delegate): PrivateScope, Public, Static, HideBySig
    RegisterForeign(String, String, Int32, Delegate): PrivateScope, Public, Static, HideBySig
    RegisterForeign(String, String, Int32, Delegate, PlForeignSwitches): PrivateScope, Public, Static, HideBySig
    get_IsInitialized(): PrivateScope, Public, Static, HideBySig, SpecialName
    Initialize(String[]): PrivateScope, Public, Static, HideBySig
    SetStreamReader(DelegateStreamReadFunction): PrivateScope, Public, Static, HideBySig
    PlCleanup(): PrivateScope, Public, Static, HideBySig
    PlHalt(): PrivateScope, Public, Static, HideBySig
    SetStreamFunctionWrite(PlStreamType, DelegateStreamWriteFunction): PrivateScope, Public, Static, HideBySig
    SetStreamFunctionRead(PlStreamType, DelegateStreamReadFunction): PrivateScope, Public, Static, HideBySig
    PlThreadAttachEngine(): PrivateScope, Public, Static, HideBySig
    PlThreadSelf(): PrivateScope, Public, Static, HideBySig
    PlThreadDestroyEngine(): PrivateScope, Public, Static, HideBySig
Class SbsSW.SwiPlCs.PrologServer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, System.String[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    IsInitialized(Int32, String[]): PrivateScope, Public, Static, HideBySig
    PLHalt(): PrivateScope, Public, Static, HideBySig
Class SbsSW.SwiPlCs.PlMtEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    IntPtr EngineNumber 'get ' : 
  Methods:
    get_EngineNumber(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Free(): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    PlSetEngine(): PrivateScope, Public, HideBySig
    PlDetachEngine(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class SbsSW.SwiPlCs.swipl_win: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Methods:
    install(): PrivateScope, Public, Static, HideBySig
Class SbsSW.SwiPlCs.libpl: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    Boolean NoToString : Public, Static
    UInt64 TermRefCount : Public, Static
    Int32 PL_Q_NORMAL = 2 : Public, Static, Literal, HasDefault
    Int32 PL_Q_NODEBUG = 4 : Public, Static, Literal, HasDefault
    Int32 PL_Q_CATCH_EXCEPTION = 8 : Public, Static, Literal, HasDefault
    Int32 PL_Q_PASS_EXCEPTION = 16 : Public, Static, Literal, HasDefault
    Int32 CVT_ATOM = 1 : Public, Static, Literal, HasDefault
    Int32 CVT_STRING = 2 : Public, Static, Literal, HasDefault
    Int32 CVT_LIST = 4 : Public, Static, Literal, HasDefault
    Int32 CVT_INTEGER = 8 : Public, Static, Literal, HasDefault
    Int32 CVT_FLOAT = 16 : Public, Static, Literal, HasDefault
    Int32 CVT_VARIABLE = 32 : Public, Static, Literal, HasDefault
    Int32 CVT_NUMBER = 24 : Public, Static, Literal, HasDefault
    Int32 CVT_ATOMIC = 27 : Public, Static, Literal, HasDefault
    Int32 CVT_WRITE = 64 : Public, Static, Literal, HasDefault
    Int32 CVT_WRITE_CANONICAL = 128 : Public, Static, Literal, HasDefault
    Int32 CVT_ALL = 31 : Public, Static, Literal, HasDefault
    Int32 CVT_MASK = 255 : Public, Static, Literal, HasDefault
    Int32 BUF_DISCARDABLE = 0 : Public, Static, Literal, HasDefault
    Int32 BUF_RING = 256 : Public, Static, Literal, HasDefault
    Int32 BUF_MALLOC = 512 : Public, Static, Literal, HasDefault
    Int32 REP_ISO_LATIN_1 = 0 : Public, Static, Literal, HasDefault
    Int32 REP_UTF8 = 4096 : Public, Static, Literal, HasDefault
    Int32 REP_MB = 8192 : Public, Static, Literal, HasDefault
    Int32 PL_ENGINE_MAIN = 1 : Public, Static, Literal, HasDefault
    Int32 PL_ENGINE_CURRENT = 2 : Public, Static, Literal, HasDefault
    Int32 PL_ENGINE_SET = 0 : Public, Static, Literal, HasDefault
    Int32 PL_ENGINE_INVAL = 2 : Public, Static, Literal, HasDefault
    Int32 PL_ENGINE_INUSE = 3 : Public, Static, Literal, HasDefault
    Int32 PL_fail = 0 : Public, Static, Literal, HasDefault
    Int32 PL_succeed = 3 : Public, Static, Literal, HasDefault
    Int32 PL_QUERY_ARGC = 1 : Public, Static, Literal, HasDefault
    Int32 PL_QUERY_ARGV = 2 : Public, Static, Literal, HasDefault
    Int32 PL_QUERY_GETC = 5 : Public, Static, Literal, HasDefault
    Int32 PL_QUERY_MAX_INTEGER = 6 : Public, Static, Literal, HasDefault
    Int32 PL_QUERY_MIN_INTEGER = 7 : Public, Static, Literal, HasDefault
    Int32 PL_QUERY_MAX_TAGGED_INT = 8 : Public, Static, Literal, HasDefault
    Int32 PL_QUERY_MIN_TAGGED_INT = 9 : Public, Static, Literal, HasDefault
    Int32 PL_QUERY_VERSION = 10 : Public, Static, Literal, HasDefault
    Int32 PL_QUERY_MAX_THREADS = 11 : Public, Static, Literal, HasDefault
    Int32 PL_QUERY_ENCODING = 12 : Public, Static, Literal, HasDefault
    Int32 PL_QUERY_USER_CPU = 13 : Public, Static, Literal, HasDefault
    Int32 PL_WRT_QUOTED = 1 : Public, Static, Literal, HasDefault
    Int32 PL_WRT_IGNOREOPS = 2 : Public, Static, Literal, HasDefault
    Int32 PL_WRT_NUMBERVARS = 4 : Public, Static, Literal, HasDefault
    Int32 PL_WRT_PORTRAY = 8 : Public, Static, Literal, HasDefault
    Int32 PL_WRT_CHARESCAPES = 16 : Public, Static, Literal, HasDefault
    Int32 PL_WRT_BACKQUOTED_STRING = 32 : Public, Static, Literal, HasDefault
    Int32 PL_WRT_ATTVAR_IGNORE = 64 : Public, Static, Literal, HasDefault
    Int32 PL_WRT_ATTVAR_DOTS = 128 : Public, Static, Literal, HasDefault
    Int32 PL_WRT_ATTVAR_WRITE = 256 : Public, Static, Literal, HasDefault
    Int32 PL_WRT_ATTVAR_PORTRAY = 512 : Public, Static, Literal, HasDefault
    Int32 PL_WRT_ATTVAR_MASK = 960 : Public, Static, Literal, HasDefault
  Methods:
    PL_exception(UInt32): PrivateScope, Public, Static, HideBySig
    PL_warning(String, Void*[]): PrivateScope, Public, Static, HideBySig
    PL_raise_exception(UInt32): PrivateScope, Public, Static, HideBySig
    PL_get_arg(Int32, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    PL_get_name_arity(UInt32, UInt32&, Int32&): PrivateScope, Public, Static, HideBySig
    PL_thread_self(): PrivateScope, Public, Static, HideBySig
    PL_thread_attach_engine(IntPtr): PrivateScope, Public, Static, HideBySig
    PL_thread_destroy_engine(): PrivateScope, Public, Static, HideBySig
    Slinesize(): PrivateScope, Public, Static, HideBySig
    S__getiob(): PrivateScope, Public, Static, HideBySig
    Snew(): PrivateScope, Public, Static, HideBySig
    PL_unify_stream(UInt32, IntPtr): PrivateScope, Public, Static, HideBySig
    PL_write_term(IntPtr, UInt32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    PL_foreign_control(IntPtr): PrivateScope, Public, Static, HideBySig
    PL_foreign_context(IntPtr): PrivateScope, Public, Static, HideBySig
    PL_foreign_context_address(IntPtr): PrivateScope, Public, Static, HideBySig
    PL_retry(Int32): PrivateScope, Public, Static, HideBySig
    PL_retry_address(IntPtr): PrivateScope, Public, Static, HideBySig
    PL_toplevel(): PrivateScope, Public, Static, HideBySig
    PL_unify_intptr(UInt32, IntPtr): PrivateScope, Public, Static, HideBySig
    LoadUnmanagedLibrary(String): PrivateScope, Public, Static, HideBySig
    UnLoadUnmanagedLibrary(): PrivateScope, Public, Static, HideBySig
    Is64Bit(): PrivateScope, Public, Static, HideBySig
    SetStreamFunction(PlStreamType, StreamsFunction, Delegate): PrivateScope, Public, Static, HideBySig
    LoadLibPl(): PrivateScope, Public, Static, HideBySig
    PL_initialise(Int32, String[]): PrivateScope, Public, Static, HideBySig
    PL_is_initialised(Int32&, String[]&): PrivateScope, Public, Static, HideBySig
    PL_is_initialised(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig
    PL_halt(Int32): PrivateScope, Public, Static, HideBySig
    PL_cleanup(Int32): PrivateScope, Public, Static, HideBySig
    PL_register_foreign_in_module(String, String, Int32, Delegate, Int32): PrivateScope, Public, Static, HideBySig
    PL_create_engine(IntPtr): PrivateScope, Public, Static, HideBySig
    PL_set_engine(IntPtr, IntPtr&): PrivateScope, Public, Static, HideBySig
    PL_destroy_engine(IntPtr): PrivateScope, Public, Static, HideBySig
    PL_thread_at_exit(Delegate, IntPtr, Int32): PrivateScope, Public, Static, HideBySig
    PL_new_atom(String): PrivateScope, Public, Static, HideBySig
    PL_atom_chars(UInt32): PrivateScope, Public, Static, HideBySig
    PL_new_atom_wchars(Int32, String): PrivateScope, Public, Static, HideBySig
    PL_atom_wchars(UInt32): PrivateScope, Public, Static, HideBySig
    PL_query(UInt32): PrivateScope, Public, Static, HideBySig
    PL_open_foreign_frame(): PrivateScope, Public, Static, HideBySig
    PL_close_foreign_frame(UInt32): PrivateScope, Public, Static, HideBySig
    PL_discard_foreign_frame(UInt32): PrivateScope, Public, Static, HideBySig
    PL_rewind_foreign_frame(UInt32): PrivateScope, Public, Static, HideBySig
    PL_record(UInt32): PrivateScope, Public, Static, HideBySig
    PL_recorded(UInt32, UInt32(Out)): PrivateScope, Public, Static, HideBySig
    PL_erase(UInt32): PrivateScope, Public, Static, HideBySig
    PL_next_solution(UInt32): PrivateScope, Public, Static, HideBySig
    PL_agc_hook(PL_agc_hook_t): PrivateScope, Public, Static, HideBySig
    PL_on_halt(SwiOnHalt, Void*): PrivateScope, Public, Static, HideBySig
    PL_abort_hook(PL_abort_hook_t): PrivateScope, Public, Static, HideBySig
    PL_abort_unhook(PL_abort_hook_t): PrivateScope, Public, Static, HideBySig
    PL_predicate(String, Int32, String): PrivateScope, Public, Static, HideBySig
    PL_open_query(IntPtr, Int32, IntPtr, UInt32): PrivateScope, Public, Static, HideBySig
    PL_cut_query(UInt32): PrivateScope, Public, Static, HideBySig
    PL_close_query(UInt32): PrivateScope, Public, Static, HideBySig
    InternalError(String, Exception): PrivateScope, Public, Static, HideBySig
    PL_put_atom_chars(UInt32, String): PrivateScope, Public, Static, HideBySig
    PL_new_term_ref(): PrivateScope, Public, Static, HideBySig
    PL_put_integer(UInt32, Int64): PrivateScope, Public, Static, HideBySig
    PL_put_float(UInt32, Double): PrivateScope, Public, Static, HideBySig
    PL_put_atom(UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    PL_get_chars(UInt32, String&, UInt32): PrivateScope, Public, Static, HideBySig
    PL_get_int64(UInt32, Int64&): PrivateScope, Public, Static, HideBySig
    PL_get_pointer(UInt32, IntPtr&): PrivateScope, Public, Static, HideBySig
    PL_get_intptr(UInt32, IntPtr&): PrivateScope, Public, Static, HideBySig
    PL_get_integer(UInt32, Int32&): PrivateScope, Public, Static, HideBySig
    PL_get_long(UInt32, Int64&): PrivateScope, Public, Static, HideBySig
    PL_get_float(UInt32, Double&): PrivateScope, Public, Static, HideBySig
    PL_get_atom(UInt32, UInt32&): PrivateScope, Public, Static, HideBySig
    PL_term_type(UInt32): PrivateScope, Public, Static, HideBySig
    PL_compare(UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    PL_new_term_refs(Int32): PrivateScope, Public, Static, HideBySig
    PL_put_term(UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    PL_chars_to_term(String, UInt32): PrivateScope, Public, Static, HideBySig
    PL_cons_functor_v(UInt32, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    PL_new_functor(UInt32, Int32): PrivateScope, Public, Static, HideBySig
    PL_put_string_chars(UInt32, String): PrivateScope, Public, Static, HideBySig
    PL_put_string_nchars(UInt32, Int32, String): PrivateScope, Public, Static, HideBySig
    PL_put_list_codes(UInt32, String): PrivateScope, Public, Static, HideBySig
    PL_put_list_chars(UInt32, String): PrivateScope, Public, Static, HideBySig
    PL_put_list(UInt32): PrivateScope, Public, Static, HideBySig
    PL_is_variable(UInt32): PrivateScope, Public, Static, HideBySig
    PL_is_ground(UInt32): PrivateScope, Public, Static, HideBySig
    PL_is_atom(UInt32): PrivateScope, Public, Static, HideBySig
    PL_is_string(UInt32): PrivateScope, Public, Static, HideBySig
    PL_is_integer(UInt32): PrivateScope, Public, Static, HideBySig
    PL_is_float(UInt32): PrivateScope, Public, Static, HideBySig
    PL_is_compound(UInt32): PrivateScope, Public, Static, HideBySig
    PL_is_list(UInt32): PrivateScope, Public, Static, HideBySig
    PL_is_atomic(UInt32): PrivateScope, Public, Static, HideBySig
    PL_is_number(UInt32): PrivateScope, Public, Static, HideBySig
    PL_copy_term_ref(UInt32): PrivateScope, Public, Static, HideBySig
    PL_unify_list(UInt32, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    PL_unify_nil(UInt32): PrivateScope, Public, Static, HideBySig
    PL_get_list(UInt32, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    PL_get_nil(UInt32): PrivateScope, Public, Static, HideBySig
    PL_unify(UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    PL_unify_atom_chars(UInt32, String): PrivateScope, Public, Static, HideBySig
    PL_unify_string_chars(UInt32, String): PrivateScope, Public, Static, HideBySig
    PL_unify_list_chars(UInt32, String): PrivateScope, Public, Static, HideBySig
    PL_unify_integer(UInt32, Int32): PrivateScope, Public, Static, HideBySig
    PL_unify_integer(UInt32, Int64): PrivateScope, Public, Static, HideBySig
    PL_unify_float(UInt32, Double): PrivateScope, Public, Static, HideBySig
Struct SbsSW.SwiPlCs.libpl+StreamsFunction: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    StreamsFunction Read = 0 : Public, Static, Literal, HasDefault
    StreamsFunction Write = 1 : Public, Static, Literal, HasDefault
Struct SbsSW.SwiPlCs.FRG: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    SbsSW.SwiPlCs.FRG PL_FIRST_CALL = 0 : Public, Static, Literal, HasDefault
    SbsSW.SwiPlCs.FRG PL_CUTTED = 1 : Public, Static, Literal, HasDefault
    SbsSW.SwiPlCs.FRG PL_REDO = 2 : Public, Static, Literal, HasDefault
Class Swicli.Library.ClassBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Build(String, String, String, Type, Type[]): PrivateScope, Public, HideBySig
    CreatePassThroughConstuctors(TypeBuilder, Type): PrivateScope, Public, Static, HideBySig
Class Swicli.Library.ClassBuilder+ParentClass: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Interface Swicli.Library.ClassBuilder+IImplementMe: AutoLayout, AnsiClass, Class, NestedPublic, ClassSemanticsMask, Abstract
  Properties:
    Double Value 'get set' : 
  Methods:
    get_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Value(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class A: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Swicli.Library.PrologEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Object[] EMPTY_VECTOR : Public
  Methods:
    InitEngine(PrologEngine): PrivateScope, Public, HideBySig
    ResolveToType(PlTerm): PrivateScope, Public, Static, HideBySig
    JCALL0(PlTerm, PrologCLR): PrivateScope, Public, HideBySig
    JCALL0(String, PlTerm[]): PrivateScope, Public, HideBySig
    toTermListTerm(PlTerm): PrivateScope, Public, Static, HideBySig
    CollectionFromTerm(PlTerm): PrivateScope, Public, HideBySig
    ObjectFromTerm(PlTerm): PrivateScope, Public, Static, HideBySig
    ToTermList(IEnumerable): PrivateScope, Public, Static, HideBySig
    ToTermListICol(ICollection): PrivateScope, Public, Static, HideBySig
    ToTermIList(IList): PrivateScope, Public, Static, HideBySig
    ObjectUnify(Object, PlTerm): PrivateScope, Public, HideBySig
    ObjectToTerm(Object): PrivateScope, Public, Static, HideBySig
    GetDefaultIndexedProperty(Object, Object[]): PrivateScope, Public, Static, HideBySig
    SetDefaultIndexedProperty(Object, Object[]): PrivateScope, Public, HideBySig
    JPRED0(PlTerm, PrologCLR): PrivateScope, Public, HideBySig
    JNEW(Type, PlTerm[]): PrivateScope, Public, HideBySig
    JCALL0(Type, Object, String, PlTerm[], PlTerm[]): PrivateScope, Public, HideBySig
    Coerce(PlTerm[], Object[], Type[], ParameterInfo[], Object[]&(Out)): PrivateScope, Public, Static, HideBySig
    vector_push(T, T[]): PrivateScope, Public, Static, HideBySig
    vector_rest(T[]): PrivateScope, Public, Static, HideBySig
    terms_to_objects(PlTerm[]): PrivateScope, Public, Static, HideBySig
Class Swicli.Library.TermConversionAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Swicli.Library.PrologBinder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Reflection.Binder
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    BindToField(BindingFlags, FieldInfo[], Object, CultureInfo): PrivateScope, Public, Virtual, HideBySig
    BindToMethod(BindingFlags, MethodBase[], Object[]&, ParameterModifier[], CultureInfo, String[], Object&(Out)): PrivateScope, Public, Virtual, HideBySig
    ChangeType(Object, Type, CultureInfo): PrivateScope, Public, Virtual, HideBySig
    ReorderArgumentArray(Object[]&, Object): PrivateScope, Public, Virtual, HideBySig
    SelectMethod(BindingFlags, MethodBase[], Type[], ParameterModifier[]): PrivateScope, Public, Virtual, HideBySig
    SelectProperty(BindingFlags, PropertyInfo[], Type, Type[], ParameterModifier[]): PrivateScope, Public, Virtual, HideBySig
    CanConvertFrom(Type, Type): PrivateScope, Public, Static, HideBySig
Class SbsSW.SwiPlCs.SafeNativeMethods: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, HasSecurity
  Fields:
    System.String DllFileName = libswipl.dll : Public, Static, Literal, HasDefault
  Properties:
    System.String PlLib 'get ' : 
    System.String DllFileName1 'get ' : 
  Methods:
    get_PlLib(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DllFileName1(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct SbsSW.SwiPlCs.SafeNativeMethods+MIOSTREAM: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
Class Swicli.Library.AnyMethod: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object[], AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Swicli.Library.IKVMBased: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Swicli.Library.PrologVisible: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String ModuleName : Public
    System.String Name : Public
    Int32 Arity : Public
    System.Type TypeOf : Public
    SbsSW.SwiPlCs.Callback.PlForeignSwitches ForeignSwitches : Public
    System.Reflection.MethodInfo Method : Public
    System.Type DelegateType : Public
  Properties:
    System.Delegate Delegate 'get set' : 
  Methods:
    get_Delegate(): PrivateScope, Public, HideBySig, SpecialName
    set_Delegate(Delegate): PrivateScope, Public, HideBySig, SpecialName
Class Swicli.Library.NonDet: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Swicli.Library.PrologVisible
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Swicli.Library.PrologTest: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String ModuleName : Public
    System.String Name : Public
Class Swicli.Library.NonDetDelegate: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(PlTerm, PlTerm): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(PlTerm, PlTerm, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class SbsSW.DesignByContract.Check: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Properties:
    Boolean UseAssertions 'get set' : 
  Methods:
    Require(Boolean, String): PrivateScope, Public, Static, HideBySig
    Require(Boolean, String, Exception): PrivateScope, Public, Static, HideBySig
    Require(Boolean): PrivateScope, Public, Static, HideBySig
    Ensure(Boolean, String): PrivateScope, Public, Static, HideBySig
    Ensure(Boolean, String, Exception): PrivateScope, Public, Static, HideBySig
    Ensure(Boolean): PrivateScope, Public, Static, HideBySig
    Invariant(Boolean, String): PrivateScope, Public, Static, HideBySig
    Invariant(Boolean, String, Exception): PrivateScope, Public, Static, HideBySig
    Invariant(Boolean): PrivateScope, Public, Static, HideBySig
    Assert(Boolean, String): PrivateScope, Public, Static, HideBySig
    Assert(Boolean, String, Exception): PrivateScope, Public, Static, HideBySig
    Assert(Boolean): PrivateScope, Public, Static, HideBySig
    get_UseAssertions(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_UseAssertions(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
Class SbsSW.DesignByContract.DesignByContractException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
Class SbsSW.DesignByContract.PreconditionException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :SbsSW.DesignByContract.DesignByContractException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
Class SbsSW.DesignByContract.PostConditionException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :SbsSW.DesignByContract.DesignByContractException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
Class SbsSW.DesignByContract.InvariantException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :SbsSW.DesignByContract.DesignByContractException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
Class SbsSW.DesignByContract.AssertionException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :SbsSW.DesignByContract.DesignByContractException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
Class Swicli.Library.TrackedObject: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable`1[Swicli.Library.TrackedObject]
  Fields:
    System.String TagName : Public
    Int32 Refs : Public
    System.Runtime.InteropServices.GCHandle Pinned : Public
    Int64 addr : Public
    Boolean Heaped : Public
    Int32 HashCode : Public
    System.Threading.Thread LastThread : Public
    System.Object StrongHold : Public
    System.WeakReference Weak : Public
    Boolean IsValue : Public, InitOnly
  Properties:
    System.Object Value 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToInt64(): PrivateScope, Public, HideBySig
    CompareTo(TrackedObject): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RemoveRef(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    AddRef(): PrivateScope, Public, HideBySig
Class Swicli.Library.TrackedFrame: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Swicli.Library.TrackedFrame Prev : Public
  Methods:
    AddTracking(TrackedObject): PrivateScope, Public, HideBySig
    RemoveRefs(): PrivateScope, Public, HideBySig
Class Swicli.Library.JplSafeNativeMethods: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, HasSecurity, BeforeFieldInit
  Properties:
    System.String DllFileName1 'get ' : 
  Methods:
    get_DllFileName1(): PrivateScope, Public, Static, HideBySig, SpecialName
    install(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
Class Swicli.Library.CycTypeInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(SbsSW.SwiPlCs.PlTerm, System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    SbsSW.SwiPlCs.PlTerm cycFort : Public, InitOnly
    System.Collections.Generic.Dictionary`2[System.Type,Swicli.Library.CycTypeInfo] typeFort : Public, Static
  Properties:
    Boolean IsEnum 'get ' : 
    Boolean IsBitFlags 'get set' : 
  Methods:
    get_IsEnum(): PrivateScope, Public, HideBySig, SpecialName
    get_IsBitFlags(): PrivateScope, Public, HideBySig, SpecialName
    set_IsBitFlags(Boolean): PrivateScope, Public, HideBySig, SpecialName
    IsFlagType(Type): PrivateScope, Public, Static, HideBySig
Class Swicli.Library.TypeConversionAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Swicli.Library.ArrayIndexEnumerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Array): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[System.Int32[]]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    Int32[] Current 'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Interface Swicli.Library.NDCCH: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Swicli.Library.SCCH
  Methods:
    HasMore(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Swicli.Library.NDCCHBOX: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Swicli.Library.NDCCH
    Swicli.Library.SCCH
  Methods:
    Setup(PlTermV): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Call(PlTermV): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Close(PlTermV): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    HasMore(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    New(ContextHandle, PlTermV): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Call0(ContextHandle, PlTermV): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Close(ContextHandle, PlTermV): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Swicli.Library.AbstractNondetMethod: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    System.IDisposable
    Swicli.Library.NDCCHBOX
    Swicli.Library.NDCCH
    Swicli.Library.SCCH
  Methods:
    Register(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BackrackImpl(PlTerm, Int32, IntPtr): PrivateScope, Public, HideBySig
    New(ContextHandle, PlTermV): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Call0(ContextHandle, PlTermV): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Close(ContextHandle, PlTermV): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Setup(PlTermV): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Call(PlTermV): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Close(PlTermV): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    HasMore(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Swicli.Library.ContextHandle: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Handle : Public, InitOnly
    IntPtr Context : Public
    Swicli.Library.SCCH ManagedObject : Public
    System.Collections.Generic.Dictionary`2[System.Int32,Swicli.Library.ContextHandle] HandleToObject : Public, Static
    System.Collections.Generic.Dictionary`2[System.IntPtr,Swicli.Library.ContextHandle] ContextToObject : Public, Static
    Int32 TotalHandles : Public, Static
  Methods:
    Call(PlTermV): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Close(PlTermV): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Setup(PlTermV): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    HasMore(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Swicli.Library.NondetContextHandle: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Swicli.Library.ContextHandle
    Void .ctor(Swicli.Library.SCCH): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReleaseHandle(ContextHandle): PrivateScope, Public, Static, HideBySig
    ObtainHandle(IntPtr, SCCH): PrivateScope, Public, Static, HideBySig
    ObtainHandle(IntPtr): PrivateScope, Public, Static, HideBySig
    FindHandle(IntPtr): PrivateScope, Public, Static, HideBySig
    Setup(PlTermV): PrivateScope, Public, Virtual, HideBySig
    Call(PlTermV): PrivateScope, Public, Virtual, HideBySig
    Close(PlTermV): PrivateScope, Public, Virtual, HideBySig
    HasMore(): PrivateScope, Public, Virtual, HideBySig
Class Swicli.Library.NondetContextHandle+HandleMaker: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Swicli.Library.PrologBacked`2[TKey,TValue]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TValue
  Methods:
    InForiegnFrame(Action): PrivateScope, Public, HideBySig
    PlCall(String, String, PlTermV): PrivateScope, Public, Static, HideBySig
    KeyToTerm(TKey): PrivateScope, Public, Static, HideBySig
    ValueToTerm(TValue): PrivateScope, Public, Static, HideBySig
    TermVOf(KeyValuePair`2): PrivateScope, Public, Static, HideBySig
    ToDebugString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Swicli.Library.PrologBackedDictionary`2[TKey,TValue]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TValue
  :Swicli.Library.PrologBacked`2[TKey,TValue]
    Void .ctor(System.String, System.String, System.Collections.Generic.ICollection`1[TKey], System.String, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IDictionary`2[TKey,TValue]
    System.Collections.Generic.ICollection`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]
    System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    Boolean IsReadOnly 'get ' : 
    TValue Item [TKey] 'get set' : 
    System.Collections.Generic.ICollection`1[TKey] Keys 'get ' : 
    System.Collections.Generic.ICollection`1[TValue] Values 'get ' : 
  Methods:
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Copy(): PrivateScope, Public, HideBySig
    Add(KeyValuePair`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Contains(KeyValuePair`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(KeyValuePair`2[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Remove(KeyValuePair`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ContainsKey(TKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Add(TKey, TValue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Remove(TKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TryGetValue(TKey, TValue&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Item(TKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(TKey, TValue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Keys(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Values(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToDebugString(): PrivateScope, Public, Virtual, HideBySig
Class Swicli.Library.PrologBackedDictionary`2+PrologBackedDictionaryEnumerator[TKey,TValue]: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TValue
    Void .ctor(Swicli.Library.PrologBackedDictionary`2[TKey,TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    System.Collections.Generic.KeyValuePair`2[TKey,TValue] Current 'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Swicli.Library.PrologBackedCollection`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
  :Swicli.Library.PrologBacked`2[T,System.Object]
    Void .ctor(System.String, System.String, System.String, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.ICollection`1[T]
    System.Collections.Generic.IEnumerable`1[T]
    System.Collections.IEnumerable
    System.Collections.ICollection
  Properties:
    Int32 Count 'get ' : 
    System.Object SyncRoot 'get ' : 
    Boolean IsSynchronized 'get ' : 
    Boolean IsReadOnly 'get ' : 
  Methods:
    Add(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Contains(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(T[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(Array, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SyncRoot(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSynchronized(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Remove(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Copy(): PrivateScope, Public, HideBySig
    ToDebugString(): PrivateScope, Public, Virtual, HideBySig
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Swicli.Library.PrologBackedCollection`1+PrologBackedCollectionEnumerator[T]: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  Type parameter: T
    Void .ctor(Swicli.Library.PrologBackedCollection`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[T]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    T Current  'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Swicli.Library.PInvokeDLL: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateDelegate(String, Type): PrivateScope, Public, HideBySig
Struct Swicli.Library.EventHandlerInPrologKey: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Interfaces:
    Swicli.Library.PrologKey
  Fields:
    System.Reflection.EventInfo Event : Public
    System.Object Origin : Public
  Properties:
    System.String Module 'get set' : 
    System.String Name 'get set' : 
    Int32 Arity 'get set' : 
  Methods:
    get_Module(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Module(String): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Arity(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Arity(Int32): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Swicli.Library.EventHandlerInProlog: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Swicli.Library.PrologGenericDelegate
    Void .ctor(Swicli.Library.EventHandlerInPrologKey): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Swicli.Library.EventHandlerInPrologKey Key : Public
    UInt64 PrologEvents : Public, Static
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    CallPrologFast(Object[]): PrivateScope, Public, Virtual, HideBySig
Struct SbsSW.SwiPlCs.PlQuerySwitch: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    SbsSW.SwiPlCs.PlQuerySwitch None = 0 : Public, Static, Literal, HasDefault
    SbsSW.SwiPlCs.PlQuerySwitch Argc = 1 : Public, Static, Literal, HasDefault
    SbsSW.SwiPlCs.PlQuerySwitch Argv = 2 : Public, Static, Literal, HasDefault
    SbsSW.SwiPlCs.PlQuerySwitch GetChar = 5 : Public, Static, Literal, HasDefault
    SbsSW.SwiPlCs.PlQuerySwitch MaxInteger = 6 : Public, Static, Literal, HasDefault
    SbsSW.SwiPlCs.PlQuerySwitch MinInteger = 7 : Public, Static, Literal, HasDefault
    SbsSW.SwiPlCs.PlQuerySwitch Version = 10 : Public, Static, Literal, HasDefault
    SbsSW.SwiPlCs.PlQuerySwitch MaxThreads = 11 : Public, Static, Literal, HasDefault
    SbsSW.SwiPlCs.PlQuerySwitch Encoding = 12 : Public, Static, Literal, HasDefault
    SbsSW.SwiPlCs.PlQuerySwitch UserCpu = 13 : Public, Static, Literal, HasDefault
Class SbsSW.SwiPlCs.PlQueryVar: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, SbsSW.SwiPlCs.PlTerm): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    SbsSW.SwiPlCs.PlTerm Value 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(PlTerm): PrivateScope, Public, HideBySig, SpecialName
Class SbsSW.SwiPlCs.PlQueryVariables: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Count 'get ' : 
    SbsSW.SwiPlCs.PlTerm Item [System.String] 'get ' : 
    SbsSW.SwiPlCs.PlQueryVar Item [Int32] 'get ' : 
  Methods:
    Add(PlQueryVar): PrivateScope, Public, HideBySig
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
Class SbsSW.SwiPlCs.PlQuery: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, SbsSW.SwiPlCs.PlTermV): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, SbsSW.SwiPlCs.PlTermV): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    Boolean DiscardData : Public
  Properties:
    SbsSW.SwiPlCs.PlQueryVariables Variables 'get ' : 
    System.Collections.ObjectModel.Collection`1[System.String] VariableNames 'get ' : 
    SbsSW.SwiPlCs.PlTermV Args 'get ' : 
    System.Collections.Generic.IEnumerable`1[SbsSW.SwiPlCs.PlTermV] Solutions 'get ' : 
    System.Collections.Generic.IEnumerable`1[SbsSW.SwiPlCs.PlQueryVariables] SolutionVariables 'get ' : 
  Methods:
    get_Variables(): PrivateScope, Public, HideBySig, SpecialName
    get_VariableNames(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Args(): PrivateScope, Public, HideBySig, SpecialName
    NextSolution(): PrivateScope, Public, HideBySig
    EnsureQUID(): PrivateScope, Public, HideBySig
    get_Solutions(): PrivateScope, Public, HideBySig, SpecialName
    get_SolutionVariables(): PrivateScope, Public, HideBySig, SpecialName
    ToList(): PrivateScope, Public, HideBySig
    Query(PlQuerySwitch): PrivateScope, Public, Static, HideBySig
    PlCall(String, PlTermV): PrivateScope, Public, Static, HideBySig
    PlCall(String, String, PlTermV): PrivateScope, Public, Static, HideBySig
    PlCall(String): PrivateScope, Public, Static, HideBySig
    PlCallQuery(String): PrivateScope, Public, Static, HideBySig
Class Swicli.Library.PInvokeMetaObject: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Linq.Expressions.Expression, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Swicli.Library.PInvoke: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Swicli.Library.IPInvoke
  Methods:
    MainLinux(String[]): PrivateScope, Public, Static, HideBySig
    Invoke(String, Type[], Type, Object, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInvoke(String, Type[], Type): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    InvokeDLL(String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Create(String): PrivateScope, Public, Static, HideBySig
Class Swicli.Library.WaitUntilDelegateList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    System.Collections.Generic.List`1[Swicli.Library.WaitUntilDelegate] WaitOns : Public
    System.Threading.ManualResetEvent mre : Public
  Methods:
    WaitOne(TimeSpan, WaitUntilDelegate&(Out)): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Swicli.Library.WaitUntilDelegate: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Swicli.Library.PrologGenericDelegate
    Void .ctor(Swicli.Library.WaitUntilDelegateList, System.Reflection.EventInfo, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    Swicli.Library.WaitUntilDelegateList parent : Public
    System.Object[] Result : Public
    System.Reflection.EventInfo Event : Public
    System.Object Instance : Public
  Methods:
    CallProlog(Object[]): PrivateScope, Public, Virtual, HideBySig
    CallPrologV(Object[]): PrivateScope, Public, Virtual, HideBySig
    CallPrologFast(Object[]): PrivateScope, Public, Virtual, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Swicli.Library.LockInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Threading.Thread FirstThread : Public, InitOnly
    System.DateTime StartTime : Public, InitOnly
    System.Diagnostics.StackTrace StartStack : Public
    Int32 wasUnlocked : Public
    Int32 needsUnlock : Public
    System.String Name : Public, InitOnly
    System.Collections.Generic.List`1[System.String] Waiters : Public, InitOnly
    Boolean DisabledWatcher : Public, Static
    System.TimeSpan WatcherMax : Public, Static
    Boolean DontRealyLock : Public, Static
  Properties:
    Boolean IsLockerCurrentThread 'get ' : 
  Methods:
    CreateWatcher(String, Object): PrivateScope, Public, Static, HideBySig
    Watch(Object, String[]): PrivateScope, Public, Static, HideBySig
    CopyOf(List`1): PrivateScope, Public, Static, HideBySig
    CopyOf(ICollection): PrivateScope, Public, Static, HideBySig
    CopyOf(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    CopyOf(IDictionary`2): PrivateScope, Public, Static, HideBySig
    WeaklyLock(Object, TimeSpan, Func`1, Func`1): PrivateScope, Public, Static, HideBySig
    WeaklyLock(Object, TimeSpan, Action, Func`1): PrivateScope, Public, Static, HideBySig
    MonitorTryEnter(String, Object, TimeSpan): PrivateScope, Public, Static, HideBySig
    FindLockInfo(Object): PrivateScope, Public, Static, HideBySig
    EnterUserThread(String, Thread, Object): PrivateScope, Public, Static, HideBySig
    ExitUserThread(String, LockInfo, Object): PrivateScope, Public, Static, HideBySig
    CreateLockInfo(String, Object): PrivateScope, Public, Static, HideBySig
    get_IsLockerCurrentThread(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    TestLock(String, Object, TimeSpan): PrivateScope, Public, Static, HideBySig
    GetExtraInfo(): PrivateScope, Public, HideBySig
    MoreInfoWST(String): PrivateScope, Public, HideBySig
    GetStackTraceString(): PrivateScope, Public, Static, HideBySig
    MoreInfo(String): PrivateScope, Public, HideBySig
Class Swicli.Library.LockInfo+LWatcher: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String StackTraceString : Public
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Swicli.Library.DelegateObjectInPrologKey: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Interfaces:
    Swicli.Library.PrologKey
  Fields:
    System.Type DelegateType : Public
  Properties:
    System.String Module 'get set' : 
    System.String Name 'get set' : 
    Int32 Arity 'get set' : 
  Methods:
    get_Module(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Module(String): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Arity(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Arity(Int32): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Swicli.Library.DelegateObjectInProlog: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Swicli.Library.PrologGenericDelegate
    Void .ctor(Swicli.Library.DelegateObjectInPrologKey): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean UseCallN : Public, Static
    UInt64 PrologEvents : Public, Static
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    CallPrologFast(Object[]): PrivateScope, Public, Virtual, HideBySig
